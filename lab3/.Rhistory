knitr::opts_chunk$set(echo = TRUE)
levels(as.factor(homerange$taxon))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
homerange <- readr::read_csv("doi_10.5061_dryad.q5j65__v1/Tamburelloetal_HomeRangeDatabase.csv")
spec(homerange)
dim(homerange)
names(homerange)
str(homerange)
summary(homerange)
anyNA(homerange)
levels(as.factor(homerange$taxon))
levels(as.factor(homerange$order))
deer <- homerange %>%
select(mean.mass.g, log10.mass, family, genus, species) %>%
filter(family == "cervidae")
deer %>% arrange(desc(log10.mass))
snakes <- homerange %>%
filter(taxon == "snakes")
snakes %>% arrange(log10.hra)
hra_ratio <- homerange %>%
select(genus, species, taxon, mean.mass.g, log10.mass, log10.hra) %>%
arrange(mean.mass.g)
hra_ratio
hra_ratio <- hra_ratio %>%
mutate(hra.mass.ratio = log10.hra/log10.mass) %>%
arrange(desc(mean.mass.g))
hra_ratio
hra_ratio %>% filter(hra.mass.ratio >= 4.0 & taxon == "birds")
homerange %>% filter(common.name == "ostrich") %>%
select(genus, species)
ratio_ostrich <- hra_ratio %>%
filter(genus == "struthio" & species == "camelus") %>%
select(hra.mass.ratio)
ratio_ostrich
library(tidyverse)
heartrate <- readr::read_csv("data/heartrate.csv")
heartrate
heartrate %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
plant_data <- readr::read_csv("data/plant_data.csv")
plant_data
relig_income <- readr::read_csv(data/relig_income.csv)
relig_income
relig_income %>%
pivot_longer(-religion,
names_to = "money",
values_to = "frequency"
)
relig_income %>%
pivot_longer(-religion,
names_to = "money",
values_to = "num people"
)
relig_income %>%
pivot_longer(-religion,
names_to = "money",
values_to = "count"
)
billboard <- readr::read_csv("data/billboard.csv")
billboard
billboard2 <-
billboard %>%
pivot_longer(wk1:wk76, # a range of columns
names_to = "week",
values_to = "rank",
values_drop_na = TRUE #this will drop the NA's
)
billboard2
billboard3 <-
billboard %>%
pivot_longer(-c(artist, track, date.entered), #specific columns
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
billboard3
billboard %>%
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
names_prefix = "wk",
values_to = "rank",
values_drop_na = TRUE)
plant_data %>%
pivot_longer(cols = starts_with("day"),
names_to("day"),
names_prefix = "day")
plant_data %>%
pivot_longer(cols = starts_with("day"),
names_to = "day",
names_prefix = "day")
plant_data
plant_data <- readr::read_csv("data/plant_data.csv")
plant_data
plant_data %>%
pivot_longer(cols = starts_with("day"),
names_to = "day",
names_prefix = "day",
values_to = "measure")
plant_data
plant_data %>%
pivot_longer(cols = starts_with("day"),
names_to = "day",
names_prefix = "day",
values_to = "measure",
values_drop_na = TRUE)
plant_data %>%
pivot_longer(cols = starts_with("day"),
names_to = "day",
names_prefix = "day",
values_to = "measure")
plant_data
qpcr_untidy <- readr::read_csv("data/qpcr_untidy.csv")
qpcr_untidy
qpcr_untidy %>%
pivot_longer(
exp1_rep1:exp3_rep3,
names_to = c("experiment", "replicate"),
names_sep = "_",
values_to = "mRNA_expression")
length_data <- readr::read_csv("data/length_data.csv")
length_data
length_data %>%
transform(length = str_split(length, ";")) %>%
unnest(length)
length_data %>%
transform(length = str_split(length, ";")) #%>%
#unnest(length)
length_data %>%
transform(length = str_split(length, ";")) %>%
unnest(length)
heartrate2 <- readr::read_csv("data/heartrate2.csv")
heartrate2
heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_")
heartrate3 <- separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate") %>%
arrange(patient)
heartrate3 <- heartrate %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate") %>%
arrange(patient)
heartrate3 <- heartrate %>%
separate(patient, into= c("patient", "sex"), sep = "_") #%>%
#pivot_longer(-c(patient, sex),
#             names_to = "drug",
#             values_to = "heartrate") %>%
#arrange(patient)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") #%>%
#pivot_longer(-c(patient, sex),
#             names_to = "drug",
#             values_to = "heartrate") %>%
#arrange(patient)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate") %>%
#arrange(patient)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate") %>%
arrange(patient)
heartrate3 <- heartrate2 %>%
separate(patient, into= c("patient", "sex"), sep = "_") %>%
pivot_longer(-c(patient, sex),
names_to = "drug",
values_to = "heartrate") %>%
arrange(patient)
heartrate3
?unite
heartrate3 %>% unite("patient_sex", patient:sex, sep = "_")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library("tidyverse")
datasets::USPersonalExpenditure
?USPersonalExpenditure
expenditures <-
USPersonalExpenditure %>%
as.data.frame() %>%
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures %>% (-expenditure,
expenditures %>% (-expenditure,
?pivot_longer
expenditures %>% (-expenditure,
expenditures %>% (-expenditure,
expenditures %>% pivot_longer(-expenditure,
names_to = "year"
values_to = "spent"
expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures <- expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures <- expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures <-
USPersonalExpenditure %>%
as.data.frame() %>%
mutate(expenditure = rownames(USPersonalExpenditure))
expenditures
expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures2 <- expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures2 <- expenditures %>% pivot_longer(-expenditure,
names_to = "year",
values_to = "spent"
)
expenditures2
expenditures2 %>% select(expenditure = "Medical and Health") %>%
arrange(spent)
expenditures2 %>% filter(expenditure = "Medical and Health") %>%
arrange(spent)
expenditures2 %>% filter(expenditure == "Medical and Health") %>%
arrange(spent)
tb_data <- read_csv("data/tb_data.csv")
tb_data
tb_data %>%
pivot_wider(names_from = "key", #the observations under key will become new columns
values_from = "value")
gene_exp <- readr::read_csv("data/gene_exp.csv")
gene_exp <- readr::read_csv("data/gene_exp.csv")
gene_exp
gene_exp %>% pivot_wider(names_from = "type",
values_from = "L4 values")
gene_exp %>% pivot_wider(names_from = "type",
values_from = "L4_values")
gene_exp2 <- gene_exp %>% pivot_wider(names_from = "type",
values_from = "L4_values")
gene_exp2
gene_exp2 %>% pivot_longer(cols = gene_id,
names_to = "type",
values_to = "L4_values")
gene_exp2 <- gene_exp %>% pivot_wider(names_from = "type",
values_from = "L4_values")
gene_exp2
gene_exp2 %>% pivot_longer(cols = -gene_id,
names_to = "type",
values_to = "L4_values")
tb_data %>%
pivot_wider(names_from = "key",
values_from = "value") %>%
dplyr::rename(
Country=country,
Year=year,
New_Cases=cases,
Population=population
)
tb_data %>%
pivot_wider(names_from = "key",
values_from = "value") %>%
select(country, population)
tb_data %>%
pivot_wider(names_from = "key",
values_from = "value") %>%
select(Country=country, Population=population)
msleep
large <-
msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt >= 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt >= 200) %>%
summarize(mean_sleep_lg = mean(sleep_total))
msleep %>%
filter(bodywt >= 200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep %>%
filter(bodywt >= 200) %>%
summarise(n_genera=n_distinct(genus))
msleep %>% summarise(n_orders = n_distinct(order))
msleep %>% summarise(mean_bodywt = mean(bodywt),
max_bodywt = mean(bodywt),
min_bodywt = min(bodywt))
msleep %>% summarise(mean_bodywt = mean(bodywt),
max_bodywt = max(bodywt),
min_bodywt = min(bodywt))
library(tidyverse)
fisheries <- readr::read_csv("data/FAO_1950to2012_111914.csv")
names(msleep)
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology
#summarize(min_bodywt = min(bodywt),
#         max_bodywt = max(bodywt),
#         mean_bodywt = mean(bodywt),
#        total=n())
msleep %>%
group_by(vore) #%>% #we are grouping by feeding ecology
#summarize(min_bodywt = min(bodywt),
#         max_bodywt = max(bodywt),
#         mean_bodywt = mean(bodywt),
#        total=n())
msleep
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep %>%
count(order, sort = T)
msleep %>%
count(order, vore, sort = TRUE)
msleep %>%
select(name:order) %>%
add_count(order) %>%
top_n(-5) #the bottom 5
class(msleep$genus)
msleep%genus
msleep$genus
msleep %>%
group_by(genus) %>%
summarize(mean_sl_total = mean(sleep_total))
msleep %>% group_by(order) %>%
summarize(mean_brn_wt = mean(brainwt))
msleep %>% group_by(order) %>%
summarize(mean_brn_wt = mean(brainwt),
na.rm = TRUE)
msleep %>% group_by(order) %>%
summarize(mean_brn_wt = mean(brainwt))
msleep %>% group_by(order, na.rm=TRUE) %>%
summarize(mean_brn_wt = mean(brainwt))
msleep %>% group_by(order) %>%
summarize(mean_brn_wt = mean(brainwt))
na.rm
?group_by
?summarize
msleep %>% group_by(order) %>%
summarize(mean_brn_wt = mean(brainwt, na.rm = TRUE))
msleep %>%
filter(order == "Cetacea")
names(fisheries)
library(gapminder)
gapminder
library(gapminder)
library(gapminder)
library(gapminder)
download.packages(gapminder)
install.packages("gapminder")
library(gapminder)
gapminder
