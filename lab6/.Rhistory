ui <- dashboardPage(
dashboardHeader(title = "Plot Iris App"),
dashboardSidebar(),
dashboardBody(
selectInput("x", "Select X Variable", choices = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
selected = "Petal.Width"),
selectInput("y", "Select Y Variable", choices = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
selected = "Petal.Length"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5),
plotOutput("plot", width = "500px", height = "400px"))
)
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(iris, aes_string(x = input$x, y = input$y, col = "Species")) + geom_point(size=input$pointsize) + theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Iris App"),
dashboardSidebar(),
dashboardBody()
)
server <- function(input, output) {
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Iris App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
selected = "Petal.Width"),
selectInput("y", "Select Y Variable", choices = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
selected = "Petal.Length"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Iris Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(iris, aes_string(x = input$x, y = input$y, col = "Species")) + geom_point(size=input$pointsize) + theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
gabon <- readr::read_csv("data/IvindoData_DryadVersion.csv")
ui <- dashboardPage(
dashboardHeader(title = "Plot Iris App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
selected = "Petal.Width"),
selectInput("y", "Select Y Variable", choices = c("Sepal.Length", "Sepal.Width", "Petal.Length", "Petal.Width"),
selected = "Petal.Length"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Iris Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(iris, aes_string(x = input$x, y = input$y, col = "Species")) + geom_point(size=input$pointsize) + theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
names(gabon)
glimpse(gabon)
gabon
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("Birds", "Monkeys", "Apes", "Elephants", "Ungulates", "Rodents"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) + geom_point() + theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephants", "RA_Ungulates", "RA_Rodents"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) + geom_point() + theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephants", "RA_Ungulates", "RA_Rodents"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=F) +
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=F) +
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=F) +
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18) +
ggtitle(paste(y%input by distance))
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18) +
ggtitle(paste(y$input by distance))
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18) +
ggtitle(paste(y$input " by distance"))
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18) +
ggtitle(paste(y$input " by distance"))
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18) +
ggtitle(paste(input$y) " by distance"))
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
theme_light(base_size = 18) +
ggtitle(paste(input$y), " by distance"))
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
ggtitle(paste(input$y), " by distance") +
theme_light(base_size = 18)
)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
ggtitle(paste(input$y), " by distance") +
theme_light(base_size = 18)
)
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
ggtitle(paste(input$y), " by distance")) +
ui <- dashboardPage(
dashboardHeader(title = "Plot Relative Abundance App"),
dashboardSidebar(),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("y", "Select Y Variable", choices = c("RA_Birds", "RA_Monkeys", "RA_Apes", "RA_Elephant", "RA_Ungulate", "RA_Rodent"),
selected = "Birds")
), # close the first box
box(title = "Plot of Relative Abundance Data", width = 7,
plotOutput("plot", width = "600px", height = "500px"),
hr(),
helpText("Koerner et al.  Vertebrate community composition and diversity declines along a defaunation gradient radiating from rural villages in Gabon. Journal of Applied Ecology. 2016")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
# the code to make the plot of iris data grouped by species
output$plot <- renderPlot({
ggplot(gabon, aes_string(x = "Distance", y = input$y)) +
geom_point() +
geom_smooth(method=lm, se=T) +
ggtitle(paste(input$y), " by distance") +
theme_light(base_size = 18)
})
# stop the app when we close it
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
